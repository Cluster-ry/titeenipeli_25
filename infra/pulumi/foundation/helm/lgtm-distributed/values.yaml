grafana:
  enabled: true
  adminPassword: "test" # this is replaced in pulumi values
  defaultDashboardsEnabled: true
  datasources:
    datasources.yaml:
      apiVersion: 1
      datasources:
        - name: Loki
          uid: loki
          type: loki
          url: "http://{{ .Release.Name }}-loki-gateway"
          isDefault: false
        - name: Mimir
          uid: prom
          type: prometheus
          url: "http://{{ .Release.Name }}-mimir-nginx/prometheus"
          isDefault: true
        - name: Tempo
          uid: tempo
          type: tempo
          url: "http://{{ .Release.Name }}-tempo-query-frontend:3100"
          isDefault: false
          jsonData:
            tracesToLogsV2:
              datasourceUid: loki
            lokiSearch:
              datasourceUid: loki
            tracesToMetrics:
              datasourceUid: prom
            serviceMap:
              datasourceUid: prom
        - name: Pyroscope
          type: grafana-pyroscope-datasource
          uid: pyroscope
          url: http://pyroscope.pyroscope.svc.cluster.local.:4040/
  ingress:
    enabled: true
  sidecar:
    dashboards:
      enabled: true
  dashboardProviders:
    dashboardproviders.yaml:
      apiVersion: 1
      providers:
        - name: default
          orgId: 1
          folder: ""
          type: file
          disableDeletion: false
          editable: true
          options:
            path: "/var/lib/grafana/dashboards/default"
  dashboards:
    default:
      cloudnative-pg:
        gnetId: 20417
        revision: 3
        datasource: Mimir
      traefik:
        gnetId: 17346
        revision: 9
        datasource: Mimir
      loki-promtail:
        gnetId: 10880
        revision: 1
        datasource: Mimir
      node-exporter:
        gnetId: 1860
        revision: 37
        datasource: Mimir
      logs:
        gnetId: 13639
        revision: 2
        datasource: Loki
      pods:
        gnetId: 15760
        revision: 36
        datasource: Mimir
  env:
    GF_INSTALL_PLUGINS: grafana-pyroscope-app
    GF_DIAGNOSTICS_PROFILING_ENABLED: true
    GF_DIAGNOSTICS_PROFILING_ADDR: 0.0.0.0
    GF_DIAGNOSTICS_PROFILING_PORT: 9094
  podAnnotations:
    profiles.grafana.com/cpu.scrape: "true"
    profiles.grafana.com/cpu.port: "9094"
    profiles.grafana.com/memory.scrape: "true"
    profiles.grafana.com/memory.port: "9094"
    profiles.grafana.com/goroutine.scrape: "true"
    profiles.grafana.com/goroutine.port: "9094"

mimir:
  enabled: true
  metaMonitoring:
    dashboards:
      enabled: true
    serviceMonitor:
      enabled: true
      labels:
        release: kube-prometheus-stack
  alertmanager:
    resources:
      requests:
        cpu: "20m"
  compactor:
    resources:
      requests:
        cpu: "20m"
  distributor:
    resources:
      requests:
        cpu: "20m"
  ingester:
    replicas: 2
    zoneAwareReplication:
      enabled: false
    resources:
      requests:
        cpu: "20m"
  overrides_exporter:
    resources:
      requests:
        cpu: "20m"
  querier:
    replicas: 1
    resources:
      requests:
        cpu: "20m"
  query_frontend:
    resources:
      requests:
        cpu: "20m"
  query_scheduler:
    replicas: 1
    resources:
      requests:
        cpu: "20m"
  ruler:
    resources:
      requests:
        cpu: "20m"
  store_gateway:
    zoneAwareReplication:
      enabled: false
    resources:
      requests:
        cpu: "20m"
  minio:
    resources:
      requests:
        cpu: "20m"
  rollout_operator:
    resources:
      requests:
        cpu: "20m"

tempo:
  enabled: true
  ingester:
    replicas: 1
    config:
      replication_factor: 1
  metaMonitoring:
    dashboards:
      enabled: true
    serviceMonitor:
      enabled: true
      labels:
        release: kube-prometheus-stack
    prometheusRule:
      enabled: true
      labels:
        release: kube-prometheus-stack
  metricsGenerator:
    enabled: true
    config:
      storage:
        remote_write:
          - url: "http://lgtm-distributed-mimir-nginx.monitoring.svc:80/api/v1/push"
            send_exemplars: true
  traces:
    otlp:
      grpc:
        enabled: true
      http:
        enabled: true

loki:
  enabled: true
  serviceMonitor:
    enabled: true
    labels:
      release: kube-prometheus-stack
  compactor:
    enabled: true
    persistence:
      enabled: true
  distributor:
    replicas: 3
    maxUnavailable: 2
  indexGateway:
    enabled: true
    maxUnavailable: 1
    replicas: 2
  ingester:
    replicas: 3
    maxUnavailable: 2
  querier:
    replicas: 3
    maxUnavailable: 2
  queryFrontend:
    replicas: 2
    maxUnavailable: 1
  queryScheduler:
    enabled: true
    replicas: 2
